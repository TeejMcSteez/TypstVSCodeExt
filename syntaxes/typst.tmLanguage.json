{
    "name": "typst",
    "scopeName": "source.typst",
    "fileTypes": ["typ"],
    "patterns": [
        {
            "name": "markup.bold.typst",
            "match": "^\\*[^*]+\\*"
        },
        {
            "name": "markup.emphasis.typst",
            "match": "_[__]+_"
        },
        {
            "name": "markup.heading.typst",
            "match": "^=+\\s.*$"
        },
        {
            "name": "comment.line.double-slash.typst",
            "match": "//.*$"
        },
        {
            "name": "comment.block.typst",
            "match": "/\\*.*?\\*/",
            "captures": {
                "1": {
                    "name": "comment.block.typst"
                }
            }
        },
        {
            "name": "markup.bold.typst",
            "match": "^\\+_*",
            "captures": {
                "1": {
                    "name": "markup.bold.typst"
                }
            }
        },
        {
            "name": "markup.bold.typst",
            "match": "^\\-_*",
            "captures": {
                "1": {
                    "name": "markup.bold.typst"
                }
            }
        },          
        {
            "name": "markup.bold.typst",
            "match": "^#\\w*()"
        },
        {
            "match": "(\\$)(.*?)(\\$)",
            "captures": {
                "1": {
                    "name": "markup.bold.typst"
                },
                "3": {
                    "name": "markup.bold.typst"
                }
            }
        },
        {
            "name": "markup.bold.typst",
            "begin": "\\$\\$",
            "end": "\\$\\$|$",
            "patterns": []
        },
        {
            "name": "keyword.other.typst",
            "match": "\\b(?:if|else|for|while|return|break|continue|switch|case|default|auto)\\b"
        },
        {
            "name": "variable.parameter.typst",
            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
            "name": "constant.numeric.typst",
            "match": "\\b\\d+\\b"
        },
        {
            "name": "constant.language.typst",
            "match": "\\b(?:true|false|null)\\b"
        },
        {
            "name": "markup.bold.typst",
            "match": "\\<\\w+\\>"
        },
        {
            "name": "markup.inline.raw.typst",
            "begin": "\\`",
            "end": "\\`",
            "patterns": []
        },
        {
            "name": "markup.inline.raw.typst",
            "match": "`[^`]*?`"
        },
        {
            "name": "markup.bold.typst",
            "match": "\\@\\w+"
        }
    ]
}
